Yet another MIPS processor simulator.

This simulator runs a subset of the little endian MIPS32 (MIPSEL)
specification.  Full compliance to the specification is a non-goal. It does
not implement caches and any type of memory management.

The goal is to be a multiprocessor simulator, then to implement COP2 to have
some transputer-like functionality.

To build the simulator:
	- Build dependencies: c99 compiler, POSIX compatible libc, elf.h
	  (installed via libelf on Linux) and err.h (installed via libbsd
	  on Linux)
	- check config.mk and, if needed, set compiler and flags to your liking
	- make

To build the examples:
	- Build dependencies: MIPSEL capable assembler, compiler and linker
	- cd examples
	- check config.mk and, if needed, set compiler and flags to your liking
	- make

To run the simulator (from the repository's root directory):
	- ./psim /path/to/mipsel_object_file
	- if NDEBUG was not set when compiling, files called cpuXXXX_instrdump
	  will be created when the program is executed. To check these files
	  you will need a MIPSEL capable objdump(1):
		* objdump -b binary -m mips -D cpuXXXX_instrdump
